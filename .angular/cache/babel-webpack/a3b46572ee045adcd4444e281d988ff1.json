{"ast":null,"code":"import { map, take } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../_services/authentication.service\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(router, authService) {\n      this.router = router;\n      this.authService = authService;\n    }\n\n    canActivate(next, state) {\n      return this.authService.isLoggedIn.pipe(take(1), map(isLoggedIn => {\n        if (!isLoggedIn) {\n          this.router.navigate(['/login']);\n          return false;\n        }\n\n        return true;\n      }));\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthenticationService));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}